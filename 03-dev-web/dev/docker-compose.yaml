#
# Docker Compose 配置文件 - 用于 Web 开发环境
#
version: '3.8'

services:
  # 服务名称
  web-dev:
    # --- 镜像与构建配置 ---
    # 定义最终生成的镜像名称为 'web-dev:latest'
    image: web-dev:latest
    build:
      # 构建上下文为当前目录 (dev)
      context: .
      dockerfile: Dockerfile
      # 将基础镜像名称和用户名作为构建参数传递给 Dockerfile
      args:
        BASE_IMAGE: web-base:latest
        DEV_USER: ${DEV_USER:-shijiashuai}

    # --- 容器配置 ---
    container_name: web-dev
    hostname: web-dev
    # 从 .env 文件加载环境变量
    env_file:
      - .env

    # --- 运行时与安全设置 ---
    # 指定容器运行的用户和用户组 (UID:GID)，与基础镜像中创建的用户匹配
    # 从 .env 文件读取，如果不存在则使用默认值
    user: "${USER_UID:-2034}:${GROUP_GID:-2000}"
    # 除非手动停止，否则容器将一直运行
    restart: unless-stopped
    # 保持标准输入打开并分配一个伪终端，使容器可以交互
    tty: true
    stdin_open: true

    # --- 网络与卷挂载 ---
    ports:
      # 将容器的 SSH 端口和常用 Web 端口映射到主机
      - "2224:22"
      - "3000:3000"
      - "8000:8000"
      - "8080:8080"
    volumes:
      # 将当前目录挂载到容器的 /workspace，方便代码同步
      - .:/workspace
      # 挂载额外的数据卷
      - /data-lush:/data-lush

    # --- 默认工作目录 ---
    # 设置容器内的默认工作目录
    working_dir: /workspace
